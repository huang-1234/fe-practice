{
  /* 
  tsconfig.json是ts编译器的配置文件
  1 "include" 用来指定哪些ts文件需要被编译
  路径： **表示任意目录
        *表示任意文件
  2 "exclude" 指定哪些文件不编译

  3 "extends":"./config/base"
    定义被继承的配置文件

  // 4 "file": [
  //   "core.ts",
  //   "特定的ts文件.ts"
  // ]
  */
  "include": [
    "./src/**/*"
  ],
  "exclude": [
    "./src/hello/**/*"
  ],
  // /* 
  // 5 complierOptions 编译器的选项
  // */
  "compilerOptions" : {
    // 编译目标
    "target": "es6",
    // Argument for '--module' option must be: 'none', 'commonjs', 'amd', 'system', 'umd', 'es6', 'es2015', 
    // 'es2020', 'esnext'.
    "module": "es6",
    // lib 用来指定项目需要用到的库
    /* Argument for '--lib' option must be: 'es5', 'es6', 'es2015', 'es7', 'es2016', 'es2017', 'es2018', 
     'es2019', 'es2020', 'esnext', 'dom', 'dom.iterable', 'webworker', 'webworker.importscripts', 
     'webworker.iterable', 'scripthost', 'es2015.core', 'es2015.collection', 'es2015.generator', 
     'es2015.iterable', 'es2015.promise', 'es2015.proxy', 'es2015.reflect', 'es2015.symbol', 
     'es2015.symbol.wellknown', 'es2016.array.include', 'es2017.object', 'es2017.sharedmemory',
     'es2017.string', 'es2017.intl', 'es2017.typedarrays', 'es2018.asyncgenerator', 'es2018.asynciterable', 
     'es2018.intl', 'es2018.promise', 'es2018.regexp', 'es2019.array', 'es2019.object', 'es2019.string', 
     'es2019.symbol', 'es2020.bigint', 'es2020.promise', 'es2020.sharedmemory', 'es2020.string', 
     'es2020.symbol.wellknown', 'es2020.intl', 'esnext.array', 'esnext.symbol', 'esnext.asynciterable', 
     'esnext.intl', 'esnext.bigint', 'esnext.string', 'esnext.promise', 'esnext.weakref'. */
    "lib": ["es6","DOM"],
    // outDir 用来指定编译后文件的位置
    "outDir": "./dist",
    // 是否对js文件进行编译
    "allowJs": false,
    // 是否按照ts的语法来检查js文件
    "checkJs": false,
    // 编译后是否去除注释
    "removeComments": false,
    // 是否不生成js文件.可以选择ts语法坚持，但是不生成js文件
    "noEmit":true,
    // 当有错误时不生成编译后的文件
    "noEmitOnError": true,
    // 用来设置编译后的js文件是否使用严格模式
    "alwaysStrict": true,
     // 不允许出现隐式any
     "noImplicitAny": true,
     // 不允许出现不明确的this
     "noImplicitThis": true,
     // 是否检查空值
     "strictNullChecks": true,
     // strict总开关
     "strict": true,
  }
}