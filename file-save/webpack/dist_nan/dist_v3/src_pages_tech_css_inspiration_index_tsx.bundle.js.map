{"version":3,"file":"src_pages_tech_css_inspiration_index_tsx.bundle.js","mappings":";;;;;;;;;;;;;;;AAAkB;AAEX;AAEA,SAAS,gBAAgB;AAC9B,SACE,iEAAC,SAAI,WAAU,wBACb,iEAAC,SAAI,WAAW,iBAAiB,CACnC;AAEJ;;;;;;;;;;;;;;;;;ACVkB;AAEX;AAGA,SAAS,iBAAiB;AAC/B,SACE,iEAAC,SAAI,WAAU,UACb,iEAAC,SAAI,WAAU,qBAEb,iEAAC,SAAI,WAAU,YAAS,4FAAe,GACvC,iEAAC,SAAI,WAAU,aAAU,6FAAgB,GACzC,iEAAC,SAAI,WAAU,YAAS,0EAAY,GACpC,iEAAC,SAAI,WAAU,aAAU,uFAAe,CAC1C,CACF;AAEJ;;;;;;;;;;;;;;;;ACjBkD;AAGhD;;;;;;;;;;;;;;;;;;;;ACH2B;AACC;AACC;AACV;AACH;AAElB,IAAK,kBAAL,kBAAKA,qBAAL;AACE,EAAAA,kCAAA;AADG,SAAAA;AAAA;AAGL,MAAM,qBAAqB;AAAA,EACzB,iEAAC,sFAAa,MAAC;AAAA,EACf,iEAAC,uEAAc,MAAC;AAClB;AACA,SAAS,aAAa,KAAa;AACjC,SAAO,yDAAqB;AAC9B;AAEe,SAAS,qBAAqB;AAC3C,SACE,iEAAC,8EAAY,QACX,iEAAC,YAAI,oBAAqB,GAC1B;AAAA,IAAC,4CAAI;AAAJ;AAAA,MACC,kBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,YAAY,CAAC,WAAmB,MAA4E;AAAA,MAE5G;AAAA,MACA,OAAO,IAAI,MAAM,EAAE,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,MAAM;AACzC,cAAM,KAAK,OAAO,CAAC;AACnB,eAAO;AAAA,UACL,OAAO,OAAO;AAAA,UACd,KAAK;AAAA,UACL,UAAU,MAAM;AAAA,UAChB,UAAU,oHACP,aAAa,CAAC,CACjB;AAAA,QACF;AAAA,MACF,CAAC;AAAA;AAAA,EACH,CACF;AAEJ","sources":["webpack://webpack-zero/./src/global/tech-css/after-before/CircleLoading.tsx","webpack://webpack-zero/./src/global/tech-css/box-shadow/InscribedAngle.tsx","webpack://webpack-zero/./src/global/tech-css/box-shadow/index.ts","webpack://webpack-zero/./src/pages/tech_css/inspiration/index.tsx"],"sourcesContent":["import React from 'react';\n\nimport './CircleLoading.css';\n\nexport function CircleLoading() {\n  return (\n    <div className='wrap_CircleLoading'>\n      <div className={'CircleLoading'}></div>\n    </div>\n  )\n}\n","import React from 'react';\n\nimport './InscribedAngle.scss';\n\n\nexport function InscribedAngle() {\n  return (\n    <div className='wrap'>\n      <div className='wrap_box_shadow'>\n\n        <div className=\"shadow\">使用阴影的扩散半径实现内切圆角</div>\n        <div className=\"shadow2\">阴影实现缺点，单个标签最多是2边</div>\n        <div className=\"linear\">使用径向渐变实现内切圆角</div>\n        <div className=\"linear2\">径向渐变实现内切圆角可以是4边</div>\n      </div>\n    </div>\n  )\n}\n","import { InscribedAngle } from \"./InscribedAngle\";\n\nexport {\n  InscribedAngle\n}","import { SubAppBorder } from '@global/styles/layout/sub-app-border';\nimport { CircleLoading } from '@global/tech-css/after-before/CircleLoading';\nimport { InscribedAngle } from '@global/tech-css/box-shadow';\nimport { Tabs } from 'antd';\nimport React from 'react';\n\nenum ETechCssMapComp {\n  CircleLoading,\n}\nconst techCssAfterBefore = [\n  <CircleLoading />,\n  <InscribedAngle />\n]\nfunction getCompByKey(idx: number) {\n  return techCssAfterBefore?.[idx];\n}\n\nexport default function TechCssInspiration() {\n  return (\n    <SubAppBorder>\n      <h2>{'TechCssInspiration'}</h2>\n      <Tabs\n        defaultActiveKey=\"0\"\n        tabPosition={'top'}\n        onTabClick={(activeKey: string, e: React.KeyboardEvent<Element> | React.MouseEvent<Element, MouseEvent>) => {\n          // console.log('activeKey', activeKey)\n        }}\n        items={new Array(30).fill(0).map((_, i) => {\n          const id = String(i);\n          return {\n            label: `Tab-${id}`,\n            key: id,\n            disabled: i === 28,\n            children: <>\n              {getCompByKey(i)}\n            </>,\n          };\n        })}\n      />\n    </SubAppBorder>\n  )\n}\n"],"names":["ETechCssMapComp"],"sourceRoot":""}