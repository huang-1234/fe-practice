{"version":3,"file":"src_pages_daren_account-bind_index_tsx.bundle.js","mappings":";;;;;;;;;;;;;;;;AAAO;AAEoC;AACX;AAGzB,SAAS,iBAAiB;AAE/B,QAAM,CAAC,QAAQ,SAAS,IAAI,+CAAQ,CAAoB,IAAI;AAI5D,QAAM,CAAC,MAAM,OAAO,IAAI,+CAAQ,CAAC,cAAc;AAG/C,kDAAS,CAAC,MAAM;AACd,eAAW,MAAM;AACf,cAAQ,oBAAoB;AAAA,IAC9B,GAAG,IAAI;AAAA,EACT,GAAG,CAAC,CAAC;AAGL,QAAM,gBAAyC,CAAC;AAIhD,QAAM,eAAuC;AAAA;AAAA;AAAA,IAE3C,aAAa;AAAA,EACf;AAGA,kDAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACX,UAAI,UAAU;AAAM;AACpB,aAAO,QAAQ;AACf,gBAAU,IAAI;AAAA,IAChB;AAAA,EACF,GAAG,CAAC,MAAM,CAAC;AAEX,SACE,oHACE,iEAAC,SAAI,OAAO,EAAE,QAAQ,kBAAkB,QAAQ,IAAI,KAClD;AAAA,IAAC,iEAAO;AAAP;AAAA,MACC;AAAA,MACA,eAAe;AAAA,MACf,MAAK;AAAA,MACL,OAAO,EAAE,cAAc,iBAAiB;AAAA;AAAA,EAC1C,GACA;AAAA,IAAC,gEAAM;AAAN;AAAA,MACC,eAAe;AAAA,MACf,OAAO;AAAA,MACP,WAAW;AAAA,MACX,UAAU,CAAAA,YAAU,QAAQA,QAAO,QAAQ,CAAC;AAAA,MAC5C,MAAK;AAAA,MACL,OAAO,EAAE,QAAQ,SAAS,WAAW,SAAS;AAAA;AAAA,EAChD,CACF,GACA,iEAAC,SAAI,OAAO,EAAE,WAAW,OAAO,KAC7B,IACH,CACF;AAEJ;;;;;;;;;;;;;;;;;;;AC9DqB;AACH;AACa;AACF;AAE7B,MAAM,aAAa;AAAA,EACjB,iEAAC,mFAAc,MAAC;AAClB;AACA,SAAS,aAAa,KAAa;AACjC,SAAO,yCAAa,IAAI,WAAW;AACrC;AAEe,SAAS,cAAc;AACpC,SACE,iEAAC,8EAAY,QACX,iEAAC,YAAI,gBAAiB,GACtB;AAAA,IAAC,4CAAI;AAAJ;AAAA,MACC,kBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,YAAY,CAAC,WAAmB,MAA4E;AAAA,MAE5G;AAAA,MACA,OAAO,IAAI,MAAM,EAAE,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,MAAM;AACzC,cAAM,KAAK,OAAO,CAAC;AACnB,eAAO;AAAA,UACL,OAAO,OAAO;AAAA,UACd,KAAK;AAAA,UACL,UAAU,MAAM;AAAA,UAChB,UAAU,iEAAC,SAAI,OAAO,EAAE,UAAU,cAAc,WAAW,aAAa,KACrE,aAAa,CAAC,CACjB;AAAA,QACF;AAAA,MACF,CAAC;AAAA;AAAA,EACH,CACF;AAEJ","sources":["webpack://webpack-zero/./src/global/materials/editor/EditorBaseWang/index.tsx","webpack://webpack-zero/./src/pages/daren/account-bind/index.tsx"],"sourcesContent":["import '@wangeditor/editor/dist/css/style.css' // 引入 css\n\nimport React, { useState, useEffect } from 'react'\nimport { Editor, Toolbar } from '@wangeditor/editor-for-react'\nimport { IDomEditor, IEditorConfig, IToolbarConfig } from '@wangeditor/editor'\n\nexport function EditorBaseWang() {\n  // editor 实例\n  const [editor, setEditor] = useState<IDomEditor | null>(null)   // TS 语法\n  // const [editor, setEditor] = useState(null)                   // JS 语法\n\n  // 编辑器内容\n  const [html, setHtml] = useState('<p>hello</p>')\n\n  // 模拟 ajax 请求，异步设置 html\n  useEffect(() => {\n    setTimeout(() => {\n      setHtml('<p>hello world</p>')\n    }, 1500)\n  }, [])\n\n  // 工具栏配置\n  const toolbarConfig: Partial<IToolbarConfig> = {}  // TS 语法\n  // const toolbarConfig = { }                        // JS 语法\n\n  // 编辑器配置\n  const editorConfig: Partial<IEditorConfig> = {    // TS 语法\n    // const editorConfig = {                         // JS 语法\n    placeholder: '请输入内容...',\n  }\n\n  // 及时销毁 editor ，重要！\n  useEffect(() => {\n    return () => {\n      if (editor == null) return\n      editor.destroy()\n      setEditor(null)\n    }\n  }, [editor])\n\n  return (\n    <>\n      <div style={{ border: '1px solid #ccc', zIndex: 100 }}>\n        <Toolbar\n          editor={editor}\n          defaultConfig={toolbarConfig}\n          mode=\"default\"\n          style={{ borderBottom: '1px solid #ccc' }}\n        />\n        <Editor\n          defaultConfig={editorConfig}\n          value={html}\n          onCreated={setEditor}\n          onChange={editor => setHtml(editor.getHtml())}\n          mode=\"default\"\n          style={{ height: '500px', overflowY: 'hidden' }}\n        />\n      </div>\n      <div style={{ marginTop: '15px' }}>\n        {html}\n      </div>\n    </>\n  )\n}\n","\nimport { Tabs } from 'antd';\nimport React from 'react';\nimport { EditorBaseWang } from '@global/materials/editor/EditorBaseWang';\nimport { SubAppBorder } from '@global/styles/layout/sub-app-border';\n\nconst components = [\n  <EditorBaseWang />,\n]\nfunction getCompByKey(idx: number) {\n  return components?.[0 % components.length];\n}\n\nexport default function AccountBind() {\n  return (\n    <SubAppBorder>\n      <h2>{'EditorBaseWang'}</h2>\n      <Tabs\n        defaultActiveKey=\"0\"\n        tabPosition={'top'}\n        onTabClick={(activeKey: string, e: React.KeyboardEvent<Element> | React.MouseEvent<Element, MouseEvent>) => {\n          // console.log('activeKey', activeKey)\n        }}\n        items={new Array(30).fill(0).map((_, i) => {\n          const id = String(i);\n          return {\n            label: `Tab-${id}`,\n            key: id,\n            disabled: i === 28,\n            children: <div style={{ minWidth: `calc(80vw)`, minHeight: `calc(80vh)` }}>\n              {getCompByKey(i)}\n            </div>,\n          };\n        })}\n      />\n    </SubAppBorder>\n  )\n}\n"],"names":["editor"],"sourceRoot":""}